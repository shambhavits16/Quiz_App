{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\quiz-app\\\\src\\\\pages\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport { Box, Button, CircularProgress, Typography } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport useAxios from 'axios';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomInt = max => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\nconst Questions = () => {\n  _s();\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_question\n  } = useSelector(state => state);\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n  const {\n    response,\n    loading\n  } = useAxios({\n    url: apiUrl\n  });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (response !== null && response !== void 0 && response.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(getRandomInt(question.incorrect_answers.length), 0, question.correct_answer);\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n  if (loading || !response || !response.results || response.results.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  const handleClickAnswer = () => {\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [\"Question \", questionIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      mt: 5,\n      children: response.results[questionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), options.map((data, id) => /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClickAnswer,\n        variant: \"contained\",\n        children: decode(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: [\"Score: \", score, \" / \", response.results.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"Gfs+j+Lsg8+YKw8MfgYKzeS/P2o=\", false, function () {\n  return [useSelector, useAxios];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["Box","Button","CircularProgress","Typography","useSelector","useAxios","useEffect","useState","jsxDEV","_jsxDEV","getRandomInt","max","Math","floor","random","Questions","_s","question_category","question_difficulty","question_type","amount_of_question","state","apiUrl","concat","response","loading","url","questionIndex","setQuestionIndex","options","setOptions","results","length","question","answers","incorrect_answers","splice","correct_answer","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClickAnswer","variant","map","data","id","onClick","decode","score","_c","$RefreshReg$"],"sources":["D:/React/quiz-app/src/pages/Questions.js"],"sourcesContent":["import { Box, Button, CircularProgress, Typography } from \"@mui/material\"\r\nimport { useSelector } from \"react-redux\";\r\nimport useAxios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst getRandomInt = (max) => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nconst Questions = () => {\r\n\r\n  const {\r\n    question_category,\r\n    question_difficulty,\r\n    question_type,\r\n    amount_of_question,\r\n  } = useSelector((state) => state);\r\n\r\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\r\n  if (question_category) {\r\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\r\n  }\r\n\r\n  if (question_difficulty) {\r\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\r\n  }\r\n\r\n  if (question_type) {\r\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\r\n  }\r\n\r\n  const { response, loading } = useAxios({ url: apiUrl });\r\n  const [questionIndex,setQuestionIndex] = useState(0);\r\n  const [options, setOptions] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(response?.results.length) {\r\n      const question = response.results[questionIndex];\r\n      let answers = [...question.incorrect_answers];\r\n      answers.splice(\r\n        getRandomInt(question.incorrect_answers.length),\r\n        0,\r\n        question.correct_answer\r\n      );\r\n      setOptions(answers);\r\n    }\r\n  }, [response, questionIndex]);\r\n\r\n  if(loading || !response || !response.results || response.results.length === 0) {\r\n    return (\r\n      <Box mt={20}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  const handleClickAnswer = () => {\r\n    if(questionIndex + 1 < response.results.length) {\r\n      setQuestionIndex(questionIndex + 1)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\r\n      <Typography mt={5}>{response.results[questionIndex].question}</Typography>\r\n      {options.map((data, id) => (\r\n        <Box mt={2} key={id}>\r\n          <Button onClick={handleClickAnswer} variant=\"contained\">\r\n            {decode(data)}\r\n          </Button>\r\n        </Box>\r\n      ))}\r\n      <Box mt={5}>\r\n        Score: {score} / {response.results.length}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Questions\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}